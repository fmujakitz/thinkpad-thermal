export const QuickSettingsItem: any;
export const QuickToggle: any;
export const QuickMenuToggle: any;
export const QuickSlider: any;
export const QuickSettingsMenu: {
    new (sourceActor: any, nColumns?: number): {
        actor: any;
        _dimEffect: any;
        _overlay: any;
        _grid: any;
        addItem(item: any, colSpan?: number): void;
        insertItemBefore(item: any, sibling: any, colSpan?: number): void;
        _completeAddItem(item: any, colSpan: any): void;
        _activeMenu: any;
        getFirstItem(): any;
        open(animate: any): void;
        close(animate: any): void;
        _setDimmed(dim: any): void;
        _arrowAlignment: any;
        _arrowSide: any;
        _boxPointer: any;
        _systemModalOpenedId: number;
        _openedSubMenu: any;
        _setOpenedSubMenu(submenu: any): void;
        _onKeyPress(actor: any, event: any): any;
        setArrowOrigin(origin: any): void;
        setSourceAlignment(alignment: any): void;
        isOpen: boolean;
        destroy(): void;
        sourceActor: any;
        focusActor: any;
        _parent: any;
        box: any;
        length: number;
        _activeMenuItem: any;
        _settingsActions: {};
        _sensitive: boolean;
        _getTopMenu(): any;
        _setParent(parent: any): void;
        getSensitive(): any;
        setSensitive(sensitive: any): void;
        sensitive: any;
        _sessionUpdated(): void;
        addAction(title: any, callback: any, icon: any): any;
        addSettingsAction(title: any, desktopFile: any): any;
        _setSettingsVisibility(visible: any): void;
        isEmpty(): boolean;
        itemActivated(animate: any): void;
        _subMenuActiveChanged(submenu: any, submenuItem: any): void;
        _connectItemSignals(menuItem: any): void;
        _updateSeparatorVisibility(menuItem: any): void;
        moveMenuItem(menuItem: any, position: any): void;
        addMenuItem(menuItem: any, position: any): void;
        _getMenuItems(): any;
        readonly firstMenuItem: any;
        readonly numMenuItems: any;
        removeAll(): void;
        toggle(): void;
        connectObject(...args: any[]): void;
        disconnectObject(...args: any[]): void;
        connect_object(...args: any[]): void;
        disconnect_object(...args: any[]): void;
    };
};
export const SystemIndicator: any;
